name: Test

on:
  workflow_dispatch:

jobs:
  cehck-macos:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        run: |
          curl -L -o octopi-uploader-1.0.32-arm64.dmg https://storage.googleapis.com/octopipoker-dev-uploader/octopi-uploader/darwin/arm64/octopi-uploader-1.0.32-arm64.dmg

      - name: Verify DMG signature
        run: |
          #!/bin/bash
  
          # Function to handle errors
          handle_error() {
              echo "Error on line $1, exiting with status $2"
              exit "$2
          }
  
          # Setup error trapping
          trap 'handle_error $LINENO $?' ERR
          
          FILE_PATH="octopi-uploader-1.0.32-arm64.dmg"
  
          log_info() {
              echo "[INFO] $1"
          }
  
          log_error() {
              echo "[ERROR] $1"
          }
  
          # Check if file exists
          if [[ -f "$FILE_PATH" ]]; then
              log_info "File exists: $FILE_PATH"
          else
              log_error "File not found: $FILE_PATH"
              exit 1
          fi
  
          # Check if codesign command exists
          if ! command -v codesign &> /dev/null; then
              log_error "codesign not installed or not in path"
              exit 1
          fi
  
          # Perform basic verification
          log_info "Performing basic verification:"
          codesign -v "$FILE_PATH"
  
          # Perform verbose verification
          log_info "Performing verbose verification:"
          codesign -v --verbose "$FILE_PATH"
  
          # Perform detailed verbose verification
          log_info "Performing very detailed verbose verification:"
          codesign -v --verbose=4 "$FILE_PATH"
  
          # Verify signature against specific requirements
          log_info "Verifying signature against specific requirements:"
          codesign -v --requirement="anchor apple" "$FILE_PATH"
  
          # Display signature information with verbose output
          log_info "Displaying signature information with verbose output:"
          codesign -v --display --verbose "$FILE_PATH"
  
          # Deep verification
          log_info "Performing deep verification:"
          codesign -v --deep "$FILE_PATH"
  
          log_info "All checks completed successfully."
    
  # check-sign:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v4
   
  #     - name: Check to add github_path
  #       run: |
  #         # Не добавляет
  #         # echo 123 >> $GITHUB_PATH

  #         # Добавляет
  #         # echo "Folder PATH" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  #         # echo $env:GITHUB_PATH 

  #         # Но так не выводит
  #         # echo $GITHUB_PATH - видимо доступ только через $env:...
  #         # echo $env:GITHUB_WORKSPACE
     
  #         # Проверка
  #         # $env:HOMEPATH - \Users\runneradmin

  #         # "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool" | Out-File -FilePath $env:GITHUB_PATH -Append
  #         # Get-Location
  #         # echo 1
  #         # echo $env:GITHUB_PATH
  #         # echo $env:GITHUB_WORKSPACE
  #         cp "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\*" $env:GITHUB_WORKSPACE
  #         # ls $env:GITHUB_WORKSPACE
  #         # cd $env:GITHUB_WORKSPACE
  #         .\signtool /?


  #     # - name: Cache SDK
  #     #   id: cache-sdk
  #     #   uses: actions/cache@v2
  #     #   with:
  #     #     path: C:\Program Files (x86)\Microsoft SDKs
  #     #     key: SDK
  #     #   if: steps.cache-sdk.outputs.cache-hit != 'true'
          
  #     - name: Install Windows SDK
  #       run: choco install windows-sdk-10.0
          
  #     - name: Check signer
  #       run: |
  #         # Работает
  #         # & "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe"     
          
  #         # Работает
  #         # cd "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool"
  #         # ls
  #         # .\signtool.exe
          
  #         # Не уверен, что добавляет
  #         # $Env:Path
  #         # $Env:Path += ';C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool'
  #         # signtool
  #         # $Env:Path
          
  #         # Не работает
  #         # echo 'C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool' >> $GITHUB_PATH
  #         # $GITHUB_PATH

  #         # Не работает
  #         "$env:C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool" | Out-File -FilePath $env:GITHUB_PATH -Append

  #         # echo 'C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  #         # echo $env
  #         # echo '-----------------------------'
  #         # echo $env:GITHUB_PATH
  #         # signtool

  #         cd $env:GITHUB_WORKSPACE
  #         .\signtool.exe -h
              
  #     - name: Check signer next step
  #       run: |
  #         # Не  работает
  #         cd $env:GITHUB_WORKSPACE
  #         .\signtool.exe -h
          


















